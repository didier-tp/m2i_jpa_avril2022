server.servlet.context-path=/appliSpringJpa
server.port=8080
logging.level.root=ERROR
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.cache=DEBUG
#logging.level.org.ehcache=DEBUG

spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
#spring.datasource.url=jdbc:mysql://localhost:3306/BaseTp?serverTimezone=UTC
spring.datasource.url=jdbc:mysql://localhost:3306/BaseTpV2?createDatabaseIfNotExist=true&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=root
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect

# si l'option spring.jpa.hibernate.ddl-auto=create est activée, toutes les
# tables nécessaires seront re-crées automatiquement à chaque démarrage
# à vide et en fonction de la structure des classes java (@Entity)
spring.jpa.hibernate.ddl-auto=create

#fichiers sql générés (pour consultation) mais pas déclenchés:
#spring.jpa.properties.javax.persistence.schema-generation.create-source=metadata
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=drop-and-create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=src/script/create.sql
#spring.jpa.properties.javax.persistence.schema-generation.scripts.drop-target=src/script/drop.sql

#cache de second niveau hibernate (pour optimiser perf sur lecture données qui changent rarement)
spring.jpa.properties.hibernate.cache.use_second_level_cache=true
spring.jpa.properties.hibernate.cache.use_query_cache=true
spring.jpa.properties.hibernate.generate_statistics=true
spring.jpa.properties.hibernate.cache.region.factory_class=org.hibernate.cache.jcache.JCacheRegionFactory
spring.jpa.properties.hibernate.javax.cache.provider=org.ehcache.jsr107.EhcacheCachingProvider



